# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ prereleased ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest]
        os: [ubuntu-latest, macos-latest]
        node-version: [10.x]
#        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://npm.pkg.github.com'
    # - name: Checkout pulsar-client-cpp
    #   uses: actions/checkout@v2
    #   with:
    #     repository: apache/pulsar
    #     path: apache-pulsar
    # - name: Build C++ client library
    #   run: |
    #     ./linux_deps.sh
    #     cd ./apache-pulsar/pulsar-client-cpp/
    #     cmake . -DBUILD_TESTS=OFF -DLINK_STATIC=ON -DBUILD_PYTHON_WRAPPER=OFF
    #     make pulsarStaticWithDeps -j8
    #     make install
    #     ls ./lib/libpulsar*
    - name: Install Linux libpulsar
      run: |
        curl --output apache-pulsar-client.deb -L "https://archive.apache.org/dist/pulsar/pulsar-2.5.1/DEB/apache-pulsar-client.deb"
        curl --output apache-pulsar-client-dev.deb -L "https://archive.apache.org/dist/pulsar/pulsar-2.5.1/DEB/apache-pulsar-client-dev.deb"
        sudo apt install ./apache-pulsar-client*.deb
      if: runner.os == 'Linux'
    - name: Install macOS libpulsar
      run: |
        brew update
        sed -i 's/"pulsarStatic"/"pulsarStatic", "pulsarStaticWithDeps"/' "$(brew formula libpulsar)"
        brew install --build-from-source libpulsar
      if: runner.os == 'macOS'
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    - name: Build native module
      run: yarn node-pre-gyp install --build-from-source
    - run: |
        ./pulsar-test-service-start.sh
        yarn test
        ./pulsar-test-service-stop.sh
      if: runner.os == 'Linux' && runner.os == 'macOS' # no tests for now
      env:
        CI: true
    - name: Package native module
      run: yarn node-pre-gyp package
    - uses: actions/upload-artifact@v2
      with:
        name: npm-package
        path: build/stage/**/*.tar.gz
    - name: Upload GitHub artifacts
      run: ./upload-to-github-release.sh 'build/stage/**/*.tar.gz'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'release' && github.event.action == 'prereleased'

  publish:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'prereleased'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install
      - run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@fretiq'
      - run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
