# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ prereleased ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://npm.pkg.github.com'
    - run: |
        curl --output apache-pulsar-client.deb -L "https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=pulsar/pulsar-2.5.0/DEB/apache-pulsar-client.deb"
        curl --output apache-pulsar-client-dev.deb -L "https://www.apache.org/dyn/mirrors/mirrors.cgi?action=download&filename=pulsar/pulsar-2.5.0/DEB/apache-pulsar-client-dev.deb"
        sudo apt install ./apache-pulsar-client*.deb
      if: runner.os == 'Linux'
    - run: |
        brew install libpulsar
      if: runner.os == 'macOS'
    - run: yarn install --frozen-lockfile
    - run: |
        ./pulsar-test-service-start.sh
        yarn test
        ./pulsar-test-service-stop.sh
      if: runner.os == 'Linux'
      env:
        CI: true
    - run: yarn node-pre-gyp package
    - name: Upload GitHub artifacts
      uses: Roang-zero1/github-upload-release-artifacts-action@master
      with:
        args:
          - build/stage/**/
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'release' && github.event.action == 'prereleased'

  publish:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'prereleased'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@fretiq'
      - run: yarn install
      - run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
